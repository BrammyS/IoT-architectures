@page "/"
@layout DashboardLayout
@inject IJSRuntime JS

<PageHeader Text="Dashboard" />

<div class="row">
    <DashboardCard Title="Temperature World Map" BootstrapSizing="col-xl-9 col-lg-8">
        <div class="w-100 d-flex max-height-card">
            <div id="googleMap" class="h-100" style="flex-basis: 100%"></div>
        </div>
    </DashboardCard>

    <DashboardCard Title="Google Maps marker" BootstrapSizing="col-xl-3 col-lg-4">
        <div>
            <p class="m-0">
                <i class="fa-solid fa-temperature-half"></i> @Temperature Â°C
            </p>
            <p class="m-0">
                <i class="fa-solid fa-location-crosshairs"></i> lat: @Lattitude
            </p>
            <p class="m-0">
                <i class="fa-solid fa-location-crosshairs"></i> lon: @Longitude
            </p>
        </div>
    </DashboardCard>
</div>

@functions {
    
    public double Lattitude {get; set;}
    
    public double Longitude {get; set;}

    public double Temperature {get; set;}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender) 
        {
            var dotNetHelper = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("initalizeMap", "googleMap");
            await JS.InvokeVoidAsync("createMarker", "test", 51.94998550415039, 6.746642112731934, dotNetHelper, nameof(ShowMarkerInfo));
            await JS.InvokeVoidAsync("createMarker", "Other location", 51.94998550415039, 7.746642112731934, dotNetHelper, nameof(ShowMarkerInfo));
        }
    }

    [JSInvokable]
    public void ShowMarkerInfo(double lat, double lon)
    {
        Lattitude = lat;
        Longitude = lon;
        Temperature = 38.5; // TODO: set this from the correct marker
        StateHasChanged();
    }
}